program sum_of_digits.aleo;



function main:
    input r0 as u128.public;
    cast 0u128 into r1 as u32;
    pow 10u32 r1 into r2;
    cast r2 into r3 as u128;
    div r0 r3 into r4;
    rem r4 10u128 into r5;
    cast r5 into r6 as u16;
    add 0u16 r6 into r7;
    cast 1u128 into r8 as u32;
    pow 10u32 r8 into r9;
    cast r9 into r10 as u128;
    div r0 r10 into r11;
    rem r11 10u128 into r12;
    cast r12 into r13 as u16;
    add r7 r13 into r14;
    cast 2u128 into r15 as u32;
    pow 10u32 r15 into r16;
    cast r16 into r17 as u128;
    div r0 r17 into r18;
    rem r18 10u128 into r19;
    cast r19 into r20 as u16;
    add r14 r20 into r21;
    cast 3u128 into r22 as u32;
    pow 10u32 r22 into r23;
    cast r23 into r24 as u128;
    div r0 r24 into r25;
    rem r25 10u128 into r26;
    cast r26 into r27 as u16;
    add r21 r27 into r28;
    cast 4u128 into r29 as u32;
    pow 10u32 r29 into r30;
    cast r30 into r31 as u128;
    div r0 r31 into r32;
    rem r32 10u128 into r33;
    cast r33 into r34 as u16;
    add r28 r34 into r35;
    cast 5u128 into r36 as u32;
    pow 10u32 r36 into r37;
    cast r37 into r38 as u128;
    div r0 r38 into r39;
    rem r39 10u128 into r40;
    cast r40 into r41 as u16;
    add r35 r41 into r42;
    cast 6u128 into r43 as u32;
    pow 10u32 r43 into r44;
    cast r44 into r45 as u128;
    div r0 r45 into r46;
    rem r46 10u128 into r47;
    cast r47 into r48 as u16;
    add r42 r48 into r49;
    cast 7u128 into r50 as u32;
    pow 10u32 r50 into r51;
    cast r51 into r52 as u128;
    div r0 r52 into r53;
    rem r53 10u128 into r54;
    cast r54 into r55 as u16;
    add r49 r55 into r56;
    cast 8u128 into r57 as u32;
    pow 10u32 r57 into r58;
    cast r58 into r59 as u128;
    div r0 r59 into r60;
    rem r60 10u128 into r61;
    cast r61 into r62 as u16;
    add r56 r62 into r63;
    cast 9u128 into r64 as u32;
    pow 10u32 r64 into r65;
    cast r65 into r66 as u128;
    div r0 r66 into r67;
    rem r67 10u128 into r68;
    cast r68 into r69 as u16;
    add r63 r69 into r70;
    cast 10u128 into r71 as u32;
    pow 10u32 r71 into r72;
    cast r72 into r73 as u128;
    div r0 r73 into r74;
    rem r74 10u128 into r75;
    cast r75 into r76 as u16;
    add r70 r76 into r77;
    cast 11u128 into r78 as u32;
    pow 10u32 r78 into r79;
    cast r79 into r80 as u128;
    div r0 r80 into r81;
    rem r81 10u128 into r82;
    cast r82 into r83 as u16;
    add r77 r83 into r84;
    cast 12u128 into r85 as u32;
    pow 10u32 r85 into r86;
    cast r86 into r87 as u128;
    div r0 r87 into r88;
    rem r88 10u128 into r89;
    cast r89 into r90 as u16;
    add r84 r90 into r91;
    cast 13u128 into r92 as u32;
    pow 10u32 r92 into r93;
    cast r93 into r94 as u128;
    div r0 r94 into r95;
    rem r95 10u128 into r96;
    cast r96 into r97 as u16;
    add r91 r97 into r98;
    cast 14u128 into r99 as u32;
    pow 10u32 r99 into r100;
    cast r100 into r101 as u128;
    div r0 r101 into r102;
    rem r102 10u128 into r103;
    cast r103 into r104 as u16;
    add r98 r104 into r105;
    cast 15u128 into r106 as u32;
    pow 10u32 r106 into r107;
    cast r107 into r108 as u128;
    div r0 r108 into r109;
    rem r109 10u128 into r110;
    cast r110 into r111 as u16;
    add r105 r111 into r112;
    cast 16u128 into r113 as u32;
    pow 10u32 r113 into r114;
    cast r114 into r115 as u128;
    div r0 r115 into r116;
    rem r116 10u128 into r117;
    cast r117 into r118 as u16;
    add r112 r118 into r119;
    cast 17u128 into r120 as u32;
    pow 10u32 r120 into r121;
    cast r121 into r122 as u128;
    div r0 r122 into r123;
    rem r123 10u128 into r124;
    cast r124 into r125 as u16;
    add r119 r125 into r126;
    cast 18u128 into r127 as u32;
    pow 10u32 r127 into r128;
    cast r128 into r129 as u128;
    div r0 r129 into r130;
    rem r130 10u128 into r131;
    cast r131 into r132 as u16;
    add r126 r132 into r133;
    cast 19u128 into r134 as u32;
    pow 10u32 r134 into r135;
    cast r135 into r136 as u128;
    div r0 r136 into r137;
    rem r137 10u128 into r138;
    cast r138 into r139 as u16;
    add r133 r139 into r140;
    cast 20u128 into r141 as u32;
    pow 10u32 r141 into r142;
    cast r142 into r143 as u128;
    div r0 r143 into r144;
    rem r144 10u128 into r145;
    cast r145 into r146 as u16;
    add r140 r146 into r147;
    cast 21u128 into r148 as u32;
    pow 10u32 r148 into r149;
    cast r149 into r150 as u128;
    div r0 r150 into r151;
    rem r151 10u128 into r152;
    cast r152 into r153 as u16;
    add r147 r153 into r154;
    cast 22u128 into r155 as u32;
    pow 10u32 r155 into r156;
    cast r156 into r157 as u128;
    div r0 r157 into r158;
    rem r158 10u128 into r159;
    cast r159 into r160 as u16;
    add r154 r160 into r161;
    cast 23u128 into r162 as u32;
    pow 10u32 r162 into r163;
    cast r163 into r164 as u128;
    div r0 r164 into r165;
    rem r165 10u128 into r166;
    cast r166 into r167 as u16;
    add r161 r167 into r168;
    cast 24u128 into r169 as u32;
    pow 10u32 r169 into r170;
    cast r170 into r171 as u128;
    div r0 r171 into r172;
    rem r172 10u128 into r173;
    cast r173 into r174 as u16;
    add r168 r174 into r175;
    cast 25u128 into r176 as u32;
    pow 10u32 r176 into r177;
    cast r177 into r178 as u128;
    div r0 r178 into r179;
    rem r179 10u128 into r180;
    cast r180 into r181 as u16;
    add r175 r181 into r182;
    cast 26u128 into r183 as u32;
    pow 10u32 r183 into r184;
    cast r184 into r185 as u128;
    div r0 r185 into r186;
    rem r186 10u128 into r187;
    cast r187 into r188 as u16;
    add r182 r188 into r189;
    cast 27u128 into r190 as u32;
    pow 10u32 r190 into r191;
    cast r191 into r192 as u128;
    div r0 r192 into r193;
    rem r193 10u128 into r194;
    cast r194 into r195 as u16;
    add r189 r195 into r196;
    cast 28u128 into r197 as u32;
    pow 10u32 r197 into r198;
    cast r198 into r199 as u128;
    div r0 r199 into r200;
    rem r200 10u128 into r201;
    cast r201 into r202 as u16;
    add r196 r202 into r203;
    cast 29u128 into r204 as u32;
    pow 10u32 r204 into r205;
    cast r205 into r206 as u128;
    div r0 r206 into r207;
    rem r207 10u128 into r208;
    cast r208 into r209 as u16;
    add r203 r209 into r210;
    cast 30u128 into r211 as u32;
    pow 10u32 r211 into r212;
    cast r212 into r213 as u128;
    div r0 r213 into r214;
    rem r214 10u128 into r215;
    cast r215 into r216 as u16;
    add r210 r216 into r217;
    cast 31u128 into r218 as u32;
    pow 10u32 r218 into r219;
    cast r219 into r220 as u128;
    div r0 r220 into r221;
    rem r221 10u128 into r222;
    cast r222 into r223 as u16;
    add r217 r223 into r224;
    cast 32u128 into r225 as u32;
    pow 10u32 r225 into r226;
    cast r226 into r227 as u128;
    div r0 r227 into r228;
    rem r228 10u128 into r229;
    cast r229 into r230 as u16;
    add r224 r230 into r231;
    cast 33u128 into r232 as u32;
    pow 10u32 r232 into r233;
    cast r233 into r234 as u128;
    div r0 r234 into r235;
    rem r235 10u128 into r236;
    cast r236 into r237 as u16;
    add r231 r237 into r238;
    cast 34u128 into r239 as u32;
    pow 10u32 r239 into r240;
    cast r240 into r241 as u128;
    div r0 r241 into r242;
    rem r242 10u128 into r243;
    cast r243 into r244 as u16;
    add r238 r244 into r245;
    cast 35u128 into r246 as u32;
    pow 10u32 r246 into r247;
    cast r247 into r248 as u128;
    div r0 r248 into r249;
    rem r249 10u128 into r250;
    cast r250 into r251 as u16;
    add r245 r251 into r252;
    cast 36u128 into r253 as u32;
    pow 10u32 r253 into r254;
    cast r254 into r255 as u128;
    div r0 r255 into r256;
    rem r256 10u128 into r257;
    cast r257 into r258 as u16;
    add r252 r258 into r259;
    cast 37u128 into r260 as u32;
    pow 10u32 r260 into r261;
    cast r261 into r262 as u128;
    div r0 r262 into r263;
    rem r263 10u128 into r264;
    cast r264 into r265 as u16;
    add r259 r265 into r266;
    cast 38u128 into r267 as u32;
    pow 10u32 r267 into r268;
    cast r268 into r269 as u128;
    div r0 r269 into r270;
    rem r270 10u128 into r271;
    cast r271 into r272 as u16;
    add r266 r272 into r273;
    output r273 as u16.private;
